@model ESOL_BO.Ecommerce.EcommerceProductDomain

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<header class="head">
    <div class="main-bar row">
        <div class="col-sm-5 col-lg-6 skin_txt">
            <h4 class="nav_top_align"><i class="fa fa-pencil"></i>Product Add</h4>
        </div>
        <div class="col-sm-7 col-lg-6">
            <ol class="breadcrumb float-xs-right nav_breadcrumb_top_align">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new { Area = "" })"><i data-tags="" data-pack="default" class="fa fa-home"></i>E-commerce Panel</a></li>
                <li class="breadcrumb-item">Product</li>
                <li class="active breadcrumb-item">Product Add</li>
            </ol>
        </div>
    </div>
</header>
<div class="outer">
    <div class="inner bg-container">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header bg-white">Input Fields</div>
                    <div class="card-block">
                        @using (Html.BeginForm("Create", "ProductAdd", FormMethod.Post, new { @id = "createform", @class = "contact_form", enctype = "multipart/form-data" }))
                        {
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.ProductId)
                            <div id="dvmessage" style="margin-left: 20px;">
                                @if (@ViewBag.Message != null)
                                {
                                    <p style="color: green">@ViewBag.Message </p>
                                }
                                @if (@ViewBag.Error != null)
                                {
                                    <p style="color: red">@ViewBag.Error </p>
                                }
                            </div>
                            <div class="row" style="margin-bottom: 20px;">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Type</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                        @Html.DropDownListFor(model => model.ServiceTypeId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceServiceTypeDomain>)ViewBag.ServiceType).Select(option => new SelectListItem
                                   {
                                       Text = Html.DisplayTextFor(_ => option.ServiceTypeName).ToString(),
                                       Value = option.ServiceTypeId.ToString(),
                                       Selected = (Model != null)
                                   }), "Select", new { @class = "form-control input-sm" })
                                    </div>
                                    <div class="form-group">
                                        <label>SKU</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                        @Html.TextBoxFor(model => model.SKU, new { @class = "form-control input-sm", @required = "required" })
                                    </div>
                                    <div class="form-group">
                                        <label>Product Name</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control input-sm", @required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Regular Price</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                        @Html.TextBoxFor(model => model.RegularPrice, new { @class = "form-control input-sm", @onkeypress = "return isNumberKey(event)", @required = "required" })
                                    </div>
                                    <div class="form-group">
                                        <label>Discount(%)</label>
                                        @Html.TextBoxFor(model => model.Discount, new { @class = "form-control input-sm", @onkeypress = "return isNumberKey(event)" })
                                    </div>
                                    <div class="form-group">
                                        <label>Sale Price</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                        @Html.TextBoxFor(model => model.SalePrice, new { @class = "form-control input-sm", @onkeypress = "return isNumberKey(event)", @required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Quantity</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                        @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control input-sm", @onkeypress = "return isNumberKey(event)", @required = "required" })
                                    </div>
                                    <div class="form-group">
                                        <label>Youtube Video Link</label>
                                        @Html.TextBoxFor(model => model.ProductVideo, new { @class = "form-control input-sm"})
                                    </div>
                                    <div class="form-group">
                                        <label>Purchase Note</label>
                                        @Html.TextBoxFor(model => model.PurchaseNote, new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12" style="border-top: 1px solid #ddd;">
                                    <ul class="nav nav-pills" style="border-bottom: 1px solid #ddd; margin-bottom: 5px;">
                                        <li class="active"><a data-toggle="pill" href="#menu1">General Information</a></li>
                                        <li><a data-toggle="pill" href="#menu2">Description</a></li>
                                        <li><a data-toggle="pill" href="#menu3">Photo</a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="tab-content">
                                        <div id="menu1" class="tab-pane fade in active">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label>Category Name</label><span style="color: #f2731e; font-weight: bold; margin-left: 2px;">*</span>
                                                        @Html.DropDownListFor(model => model.CategoryId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceCategoryDomain>)ViewBag.CategoryList).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.CategoryName).ToString(),
                                                       Value = option.CategoryId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm", @required = "required" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Sub-Category Name</label><span style="color: #f2731e; font-weight: bold; margin-left: 2px;">*</span>
                                                        @Html.DropDownListFor(model => model.SubCategoryId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceSubCategoryDomain>)ViewBag.SubCategoryList).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.SubCategoryName).ToString(),
                                                       Value = option.SubCategoryId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm", @required = "required" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Sub-Sub-Category Name</label><span style="color: #f2731e; font-weight: bold; margin-left: 2px;">*</span>
                                                        @Html.DropDownListFor(model => model.SubSubCategoryId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceSubSubCategoryDomain>)ViewBag.SubSubCategoryList).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.SubSubCategoryName).ToString(),
                                                       Value = option.SubSubCategoryId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm", @required = "required" })
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label>Badge</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                                        @Html.DropDownListFor(model => model.BadgeId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceBadgeDomain>)ViewBag.Badge).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.BadgeName).ToString(),
                                                       Value = option.BadgeId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm", @required = "required" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Brand Name</label>
                                                        @Html.DropDownListFor(model => model.BrandId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceBrandDomain>)ViewBag.Brand).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.BrandName).ToString(),
                                                       Value = option.BrandId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Color Name</label>
                                                        @Html.DropDownListFor(model => model.ColorId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceColorDomain>)ViewBag.Color).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.ColorName).ToString(),
                                                       Value = option.ColorId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm" })
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label>Size</label>
                                                        @Html.DropDownListFor(model => model.SizeId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceSizeDomain>)ViewBag.Size).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.SizeName).ToString(),
                                                       Value = option.SizeId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Unit Name</label>
                                                        @Html.DropDownListFor(model => model.UnitId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceUnitDomain>)ViewBag.Unit).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.UnitName).ToString(),
                                                       Value = option.UnitId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Weight</label>
                                                        @Html.DropDownListFor(model => model.WeightId, ((IEnumerable<ESOL_BO.Ecommerce.EcommerceWeightDomain>)ViewBag.Weight).Select(option => new SelectListItem
                                                   {
                                                       Text = Html.DisplayTextFor(_ => option.WeightName).ToString(),
                                                       Value = option.WeightId.ToString(),
                                                       Selected = (Model != null)
                                                   }), "Select", new { @class = "form-control input-sm" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="menu2" class="tab-pane fade">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Description</label><span style="color: #f2731e; font-weight: bold; margin-left: 2px;">*</span>
                                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @style = "height: 94px;" })
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Short Description</label>
                                                        @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control", @style = "height: 94px;" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="menu3" class="tab-pane fade">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label>Photo Upload</label><span style="color: #f2731e;font-weight: bold;margin-left: 2px;">*</span>
                                                        @Html.TextBoxFor(model => model.ImagePath, new { @class = "", type = "file", @required = "required" })
                                                    </div>
                                                </div>
                                                <div class="col-md-4">

                                                </div>
                                                <div class="col-md-4">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <input type="submit" class="btn btn-success btn-sm" value="Save" />
                                    <button class="btn btn-danger btn-sm" id="btncancel" type="button">Go List</button>
                                </div>
                            </div>
                        }
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="~/Scripts/js/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#BadgeName").focus();
        $("#btnSave").click(function () {
            $("#createform").submit();
        });
        $("#btncancel").click(function () {
            if (confirm("Do You Want To Cancel this page?")) {
                location.href = '@Url.Action("Index", "ProductAdd", new { Area = "Ecommerce" })';
            }
        });
    });
    $("#CategoryId").on('change', function () {
        $.ajax({
            url: '@Url.Action("GetsubCategoryByCategory", "SubSubCategory", new { Area = "Ecommerce" })',
            type: "GET",
            data: {
                categoryId: $("#CategoryId").val()
            }
        }).success(function (result1) {
            $("#SubCategoryId").html(result1);
        }).error(function (result1) {
            alert("Failed");
        });
    });
    $("#SubCategoryId").on('change', function () {
        $.ajax({
            url: '@Url.Action("GetSubsubCategoryByCategory", "ProductAdd", new { Area = "Ecommerce" })',
            type: "GET",
            data: {
                categoryId: $("#CategoryId").val(),
                subCategoryId: $("#SubCategoryId").val(),
            }
        }).success(function (result2) {
            $("#SubSubCategoryId").html(result2);
        }).error(function (result1) {
            alert("Failed");
        });
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) || charCode == 46 || charCode == 45)
            return false;
        return true;
    }
    $('#Discount').change(function () {
        var val = $('#Discount').val();
        var val2 = $("#RegularPrice").val();
        var discountAmount = (parseFloat(val2) * parseFloat(val)) / 100;
        var totalAfterDiscount = parseFloat(val2) - discountAmount;
        if (val == "" || val == 0) {
            $("#Total").val(val2);
        } else {
            $("#SalePrice").val(Math.round(totalAfterDiscount));
        }
    });
</script>

